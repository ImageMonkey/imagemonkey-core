// Code generated from ../grammar/ImagemonkeyQueryLang.g4 by ANTLR 4.7.1. DO NOT EDIT.

package imagemonkeyquerylang

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 24, 340,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3,
	6, 3, 6, 3, 6, 3, 6, 3, 7, 3, 7, 3, 8, 3, 8, 3, 9, 3, 9, 3, 10, 3, 10,
	3, 10, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 12, 3, 12, 3, 12, 3, 12, 3,
	13, 3, 13, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14,
	3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3,
	14, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15,
	3, 15, 3, 15, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3,
	16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17,
	3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3,
	17, 3, 18, 3, 18, 3, 19, 3, 19, 3, 19, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20,
	3, 20, 5, 20, 176, 10, 20, 3, 21, 6, 21, 179, 10, 21, 13, 21, 14, 21, 180,
	3, 21, 3, 21, 6, 21, 185, 10, 21, 13, 21, 14, 21, 186, 5, 21, 189, 10,
	21, 3, 21, 7, 21, 192, 10, 21, 12, 21, 14, 21, 195, 11, 21, 3, 21, 3, 21,
	7, 21, 199, 10, 21, 12, 21, 14, 21, 202, 11, 21, 3, 21, 3, 21, 6, 21, 206,
	10, 21, 13, 21, 14, 21, 207, 3, 21, 3, 21, 3, 22, 3, 22, 3, 22, 3, 22,
	3, 22, 3, 22, 6, 22, 218, 10, 22, 13, 22, 14, 22, 219, 3, 22, 3, 22, 3,
	22, 3, 23, 3, 23, 6, 23, 227, 10, 23, 13, 23, 14, 23, 228, 3, 23, 3, 23,
	3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 6,
	23, 243, 10, 23, 13, 23, 14, 23, 244, 3, 23, 3, 23, 3, 24, 3, 24, 6, 24,
	251, 10, 24, 13, 24, 14, 24, 252, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3,
	24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 6, 24, 267, 10, 24, 13, 24,
	14, 24, 268, 3, 24, 3, 24, 3, 25, 3, 25, 6, 25, 275, 10, 25, 13, 25, 14,
	25, 276, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25,
	3, 25, 3, 25, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 7, 26, 297,
	10, 26, 12, 26, 14, 26, 300, 11, 26, 3, 26, 3, 26, 5, 26, 304, 10, 26,
	3, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3,
	27, 3, 27, 3, 27, 3, 28, 6, 28, 320, 10, 28, 13, 28, 14, 28, 321, 3, 29,
	3, 29, 3, 30, 3, 30, 3, 31, 3, 31, 3, 32, 3, 32, 3, 33, 3, 33, 3, 34, 6,
	34, 335, 10, 34, 13, 34, 14, 34, 336, 3, 34, 3, 34, 2, 2, 35, 3, 2, 5,
	2, 7, 2, 9, 2, 11, 2, 13, 2, 15, 2, 17, 2, 19, 2, 21, 2, 23, 2, 25, 3,
	27, 4, 29, 5, 31, 6, 33, 7, 35, 8, 37, 9, 39, 10, 41, 11, 43, 12, 45, 13,
	47, 14, 49, 15, 51, 16, 53, 17, 55, 18, 57, 19, 59, 20, 61, 21, 63, 22,
	65, 23, 67, 24, 3, 2, 19, 3, 2, 99, 124, 3, 2, 67, 92, 4, 2, 67, 92, 99,
	124, 5, 2, 34, 34, 67, 92, 99, 124, 5, 2, 50, 59, 67, 92, 99, 124, 4, 2,
	70, 70, 102, 102, 4, 2, 71, 71, 103, 103, 4, 2, 85, 85, 117, 117, 4, 2,
	69, 69, 101, 101, 4, 2, 67, 67, 99, 99, 4, 2, 62, 62, 64, 64, 4, 2, 81,
	81, 113, 113, 4, 2, 84, 84, 116, 116, 4, 2, 68, 68, 100, 100, 4, 2, 91,
	91, 123, 123, 3, 2, 50, 59, 5, 2, 11, 12, 15, 15, 34, 34, 2, 351, 2, 25,
	3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2,
	33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2,
	2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2,
	2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2,
	2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3, 2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3,
	2, 2, 2, 2, 65, 3, 2, 2, 2, 2, 67, 3, 2, 2, 2, 3, 69, 3, 2, 2, 2, 5, 71,
	3, 2, 2, 2, 7, 73, 3, 2, 2, 2, 9, 75, 3, 2, 2, 2, 11, 77, 3, 2, 2, 2, 13,
	82, 3, 2, 2, 2, 15, 84, 3, 2, 2, 2, 17, 86, 3, 2, 2, 2, 19, 88, 3, 2, 2,
	2, 21, 91, 3, 2, 2, 2, 23, 96, 3, 2, 2, 2, 25, 100, 3, 2, 2, 2, 27, 102,
	3, 2, 2, 2, 29, 122, 3, 2, 2, 2, 31, 134, 3, 2, 2, 2, 33, 147, 3, 2, 2,
	2, 35, 164, 3, 2, 2, 2, 37, 166, 3, 2, 2, 2, 39, 175, 3, 2, 2, 2, 41, 178,
	3, 2, 2, 2, 43, 211, 3, 2, 2, 2, 45, 224, 3, 2, 2, 2, 47, 248, 3, 2, 2,
	2, 49, 272, 3, 2, 2, 2, 51, 303, 3, 2, 2, 2, 53, 305, 3, 2, 2, 2, 55, 319,
	3, 2, 2, 2, 57, 323, 3, 2, 2, 2, 59, 325, 3, 2, 2, 2, 61, 327, 3, 2, 2,
	2, 63, 329, 3, 2, 2, 2, 65, 331, 3, 2, 2, 2, 67, 334, 3, 2, 2, 2, 69, 70,
	9, 2, 2, 2, 70, 4, 3, 2, 2, 2, 71, 72, 9, 3, 2, 2, 72, 6, 3, 2, 2, 2, 73,
	74, 9, 4, 2, 2, 74, 8, 3, 2, 2, 2, 75, 76, 9, 5, 2, 2, 76, 10, 3, 2, 2,
	2, 77, 78, 9, 6, 2, 2, 78, 79, 9, 6, 2, 2, 79, 80, 9, 6, 2, 2, 80, 81,
	9, 6, 2, 2, 81, 12, 3, 2, 2, 2, 82, 83, 7, 34, 2, 2, 83, 14, 3, 2, 2, 2,
	84, 85, 7, 97, 2, 2, 85, 16, 3, 2, 2, 2, 86, 87, 7, 49, 2, 2, 87, 18, 3,
	2, 2, 2, 88, 89, 7, 47, 2, 2, 89, 90, 7, 64, 2, 2, 90, 20, 3, 2, 2, 2,
	91, 92, 9, 7, 2, 2, 92, 93, 9, 8, 2, 2, 93, 94, 9, 9, 2, 2, 94, 95, 9,
	10, 2, 2, 95, 22, 3, 2, 2, 2, 96, 97, 9, 11, 2, 2, 97, 98, 9, 9, 2, 2,
	98, 99, 9, 10, 2, 2, 99, 24, 3, 2, 2, 2, 100, 101, 7, 35, 2, 2, 101, 26,
	3, 2, 2, 2, 102, 103, 7, 99, 2, 2, 103, 104, 7, 112, 2, 2, 104, 105, 7,
	112, 2, 2, 105, 106, 7, 113, 2, 2, 106, 107, 7, 118, 2, 2, 107, 108, 7,
	99, 2, 2, 108, 109, 7, 118, 2, 2, 109, 110, 7, 107, 2, 2, 110, 111, 7,
	113, 2, 2, 111, 112, 7, 112, 2, 2, 112, 113, 7, 48, 2, 2, 113, 114, 7,
	101, 2, 2, 114, 115, 7, 113, 2, 2, 115, 116, 7, 120, 2, 2, 116, 117, 7,
	103, 2, 2, 117, 118, 7, 116, 2, 2, 118, 119, 7, 99, 2, 2, 119, 120, 7,
	105, 2, 2, 120, 121, 7, 103, 2, 2, 121, 28, 3, 2, 2, 2, 122, 123, 7, 107,
	2, 2, 123, 124, 7, 111, 2, 2, 124, 125, 7, 99, 2, 2, 125, 126, 7, 105,
	2, 2, 126, 127, 7, 103, 2, 2, 127, 128, 7, 48, 2, 2, 128, 129, 7, 121,
	2, 2, 129, 130, 7, 107, 2, 2, 130, 131, 7, 102, 2, 2, 131, 132, 7, 118,
	2, 2, 132, 133, 7, 106, 2, 2, 133, 30, 3, 2, 2, 2, 134, 135, 7, 107, 2,
	2, 135, 136, 7, 111, 2, 2, 136, 137, 7, 99, 2, 2, 137, 138, 7, 105, 2,
	2, 138, 139, 7, 103, 2, 2, 139, 140, 7, 48, 2, 2, 140, 141, 7, 106, 2,
	2, 141, 142, 7, 103, 2, 2, 142, 143, 7, 107, 2, 2, 143, 144, 7, 105, 2,
	2, 144, 145, 7, 106, 2, 2, 145, 146, 7, 118, 2, 2, 146, 32, 3, 2, 2, 2,
	147, 148, 7, 107, 2, 2, 148, 149, 7, 111, 2, 2, 149, 150, 7, 99, 2, 2,
	150, 151, 7, 105, 2, 2, 151, 152, 7, 103, 2, 2, 152, 153, 7, 48, 2, 2,
	153, 154, 7, 112, 2, 2, 154, 155, 7, 119, 2, 2, 155, 156, 7, 111, 2, 2,
	156, 157, 7, 97, 2, 2, 157, 158, 7, 110, 2, 2, 158, 159, 7, 99, 2, 2, 159,
	160, 7, 100, 2, 2, 160, 161, 7, 103, 2, 2, 161, 162, 7, 110, 2, 2, 162,
	163, 7, 117, 2, 2, 163, 34, 3, 2, 2, 2, 164, 165, 7, 39, 2, 2, 165, 36,
	3, 2, 2, 2, 166, 167, 7, 114, 2, 2, 167, 168, 7, 122, 2, 2, 168, 38, 3,
	2, 2, 2, 169, 176, 9, 12, 2, 2, 170, 171, 7, 64, 2, 2, 171, 176, 7, 63,
	2, 2, 172, 176, 7, 63, 2, 2, 173, 174, 7, 62, 2, 2, 174, 176, 7, 63, 2,
	2, 175, 169, 3, 2, 2, 2, 175, 170, 3, 2, 2, 2, 175, 172, 3, 2, 2, 2, 175,
	173, 3, 2, 2, 2, 176, 40, 3, 2, 2, 2, 177, 179, 5, 7, 4, 2, 178, 177, 3,
	2, 2, 2, 179, 180, 3, 2, 2, 2, 180, 178, 3, 2, 2, 2, 180, 181, 3, 2, 2,
	2, 181, 188, 3, 2, 2, 2, 182, 184, 7, 48, 2, 2, 183, 185, 5, 7, 4, 2, 184,
	183, 3, 2, 2, 2, 185, 186, 3, 2, 2, 2, 186, 184, 3, 2, 2, 2, 186, 187,
	3, 2, 2, 2, 187, 189, 3, 2, 2, 2, 188, 182, 3, 2, 2, 2, 188, 189, 3, 2,
	2, 2, 189, 193, 3, 2, 2, 2, 190, 192, 5, 13, 7, 2, 191, 190, 3, 2, 2, 2,
	192, 195, 3, 2, 2, 2, 193, 191, 3, 2, 2, 2, 193, 194, 3, 2, 2, 2, 194,
	196, 3, 2, 2, 2, 195, 193, 3, 2, 2, 2, 196, 200, 7, 63, 2, 2, 197, 199,
	5, 13, 7, 2, 198, 197, 3, 2, 2, 2, 199, 202, 3, 2, 2, 2, 200, 198, 3, 2,
	2, 2, 200, 201, 3, 2, 2, 2, 201, 203, 3, 2, 2, 2, 202, 200, 3, 2, 2, 2,
	203, 205, 7, 41, 2, 2, 204, 206, 5, 9, 5, 2, 205, 204, 3, 2, 2, 2, 206,
	207, 3, 2, 2, 2, 207, 205, 3, 2, 2, 2, 207, 208, 3, 2, 2, 2, 208, 209,
	3, 2, 2, 2, 209, 210, 7, 41, 2, 2, 210, 42, 3, 2, 2, 2, 211, 212, 9, 13,
	2, 2, 212, 213, 9, 14, 2, 2, 213, 214, 9, 7, 2, 2, 214, 215, 9, 8, 2, 2,
	215, 217, 9, 14, 2, 2, 216, 218, 5, 13, 7, 2, 217, 216, 3, 2, 2, 2, 218,
	219, 3, 2, 2, 2, 219, 217, 3, 2, 2, 2, 219, 220, 3, 2, 2, 2, 220, 221,
	3, 2, 2, 2, 221, 222, 9, 15, 2, 2, 222, 223, 9, 16, 2, 2, 223, 44, 3, 2,
	2, 2, 224, 226, 5, 43, 22, 2, 225, 227, 5, 13, 7, 2, 226, 225, 3, 2, 2,
	2, 227, 228, 3, 2, 2, 2, 228, 226, 3, 2, 2, 2, 228, 229, 3, 2, 2, 2, 229,
	230, 3, 2, 2, 2, 230, 231, 7, 120, 2, 2, 231, 232, 7, 99, 2, 2, 232, 233,
	7, 110, 2, 2, 233, 234, 7, 107, 2, 2, 234, 235, 7, 102, 2, 2, 235, 236,
	7, 99, 2, 2, 236, 237, 7, 118, 2, 2, 237, 238, 7, 107, 2, 2, 238, 239,
	7, 113, 2, 2, 239, 240, 7, 112, 2, 2, 240, 242, 3, 2, 2, 2, 241, 243, 5,
	13, 7, 2, 242, 241, 3, 2, 2, 2, 243, 244, 3, 2, 2, 2, 244, 242, 3, 2, 2,
	2, 244, 245, 3, 2, 2, 2, 245, 246, 3, 2, 2, 2, 246, 247, 5, 21, 11, 2,
	247, 46, 3, 2, 2, 2, 248, 250, 5, 43, 22, 2, 249, 251, 5, 13, 7, 2, 250,
	249, 3, 2, 2, 2, 251, 252, 3, 2, 2, 2, 252, 250, 3, 2, 2, 2, 252, 253,
	3, 2, 2, 2, 253, 254, 3, 2, 2, 2, 254, 255, 7, 120, 2, 2, 255, 256, 7,
	99, 2, 2, 256, 257, 7, 110, 2, 2, 257, 258, 7, 107, 2, 2, 258, 259, 7,
	102, 2, 2, 259, 260, 7, 99, 2, 2, 260, 261, 7, 118, 2, 2, 261, 262, 7,
	107, 2, 2, 262, 263, 7, 113, 2, 2, 263, 264, 7, 112, 2, 2, 264, 266, 3,
	2, 2, 2, 265, 267, 5, 13, 7, 2, 266, 265, 3, 2, 2, 2, 267, 268, 3, 2, 2,
	2, 268, 266, 3, 2, 2, 2, 268, 269, 3, 2, 2, 2, 269, 270, 3, 2, 2, 2, 270,
	271, 5, 23, 12, 2, 271, 48, 3, 2, 2, 2, 272, 274, 5, 43, 22, 2, 273, 275,
	5, 13, 7, 2, 274, 273, 3, 2, 2, 2, 275, 276, 3, 2, 2, 2, 276, 274, 3, 2,
	2, 2, 276, 277, 3, 2, 2, 2, 277, 278, 3, 2, 2, 2, 278, 279, 7, 120, 2,
	2, 279, 280, 7, 99, 2, 2, 280, 281, 7, 110, 2, 2, 281, 282, 7, 107, 2,
	2, 282, 283, 7, 102, 2, 2, 283, 284, 7, 99, 2, 2, 284, 285, 7, 118, 2,
	2, 285, 286, 7, 107, 2, 2, 286, 287, 7, 113, 2, 2, 287, 288, 7, 112, 2,
	2, 288, 50, 3, 2, 2, 2, 289, 304, 5, 7, 4, 2, 290, 298, 5, 7, 4, 2, 291,
	297, 5, 13, 7, 2, 292, 297, 5, 7, 4, 2, 293, 297, 5, 15, 8, 2, 294, 297,
	5, 17, 9, 2, 295, 297, 5, 19, 10, 2, 296, 291, 3, 2, 2, 2, 296, 292, 3,
	2, 2, 2, 296, 293, 3, 2, 2, 2, 296, 294, 3, 2, 2, 2, 296, 295, 3, 2, 2,
	2, 297, 300, 3, 2, 2, 2, 298, 296, 3, 2, 2, 2, 298, 299, 3, 2, 2, 2, 299,
	301, 3, 2, 2, 2, 300, 298, 3, 2, 2, 2, 301, 302, 5, 7, 4, 2, 302, 304,
	3, 2, 2, 2, 303, 289, 3, 2, 2, 2, 303, 290, 3, 2, 2, 2, 304, 52, 3, 2,
	2, 2, 305, 306, 5, 11, 6, 2, 306, 307, 5, 11, 6, 2, 307, 308, 7, 47, 2,
	2, 308, 309, 5, 11, 6, 2, 309, 310, 7, 47, 2, 2, 310, 311, 5, 11, 6, 2,
	311, 312, 7, 47, 2, 2, 312, 313, 5, 11, 6, 2, 313, 314, 7, 47, 2, 2, 314,
	315, 5, 11, 6, 2, 315, 316, 5, 11, 6, 2, 316, 317, 5, 11, 6, 2, 317, 54,
	3, 2, 2, 2, 318, 320, 9, 17, 2, 2, 319, 318, 3, 2, 2, 2, 320, 321, 3, 2,
	2, 2, 321, 319, 3, 2, 2, 2, 321, 322, 3, 2, 2, 2, 322, 56, 3, 2, 2, 2,
	323, 324, 7, 40, 2, 2, 324, 58, 3, 2, 2, 2, 325, 326, 7, 126, 2, 2, 326,
	60, 3, 2, 2, 2, 327, 328, 7, 128, 2, 2, 328, 62, 3, 2, 2, 2, 329, 330,
	7, 42, 2, 2, 330, 64, 3, 2, 2, 2, 331, 332, 7, 43, 2, 2, 332, 66, 3, 2,
	2, 2, 333, 335, 9, 18, 2, 2, 334, 333, 3, 2, 2, 2, 335, 336, 3, 2, 2, 2,
	336, 334, 3, 2, 2, 2, 336, 337, 3, 2, 2, 2, 337, 338, 3, 2, 2, 2, 338,
	339, 8, 34, 2, 2, 339, 68, 3, 2, 2, 2, 21, 2, 175, 180, 186, 188, 193,
	200, 207, 219, 228, 244, 252, 268, 276, 296, 298, 303, 321, 336, 3, 8,
	2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'!'", "'annotation.coverage'", "'image.width'", "'image.height'",
	"'image.num_labels'", "'%'", "'px'", "", "", "", "", "", "", "", "", "",
	"'&'", "'|'", "'~'", "'('", "')'",
}

var lexerSymbolicNames = []string{
	"", "SEP", "ANNOTATION_COVERAGE_PREFIX", "IMAGE_WIDTH_PREFIX", "IMAGE_HEIGHT_PREFIX",
	"IMAGE_NUM_LABELS_PREFIX", "PERCENT", "PIXEL", "OPERATOR", "ASSIGNMENT",
	"ORDER_BY", "ORDER_BY_VALIDATION_DESC", "ORDER_BY_VALIDATION_ASC", "ORDER_BY_VALIDATION",
	"LABEL", "UUID", "VAL", "AND", "OR", "NOT", "LPAR", "RPAR", "SKIPPED_TOKENS",
}

var lexerRuleNames = []string{
	"LOWERCASE", "UPPERCASE", "UPPERLOWERCASE", "UPPERLOWERCASEWS", "UUIDBLOCK",
	"WS", "UNDERSCORE", "SLASH", "GRAPHARROW", "DESC", "ASC", "SEP", "ANNOTATION_COVERAGE_PREFIX",
	"IMAGE_WIDTH_PREFIX", "IMAGE_HEIGHT_PREFIX", "IMAGE_NUM_LABELS_PREFIX",
	"PERCENT", "PIXEL", "OPERATOR", "ASSIGNMENT", "ORDER_BY", "ORDER_BY_VALIDATION_DESC",
	"ORDER_BY_VALIDATION_ASC", "ORDER_BY_VALIDATION", "LABEL", "UUID", "VAL",
	"AND", "OR", "NOT", "LPAR", "RPAR", "SKIPPED_TOKENS",
}

type ImagemonkeyQueryLangLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewImagemonkeyQueryLangLexer(input antlr.CharStream) *ImagemonkeyQueryLangLexer {

	l := new(ImagemonkeyQueryLangLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "ImagemonkeyQueryLang.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ImagemonkeyQueryLangLexer tokens.
const (
	ImagemonkeyQueryLangLexerSEP                        = 1
	ImagemonkeyQueryLangLexerANNOTATION_COVERAGE_PREFIX = 2
	ImagemonkeyQueryLangLexerIMAGE_WIDTH_PREFIX         = 3
	ImagemonkeyQueryLangLexerIMAGE_HEIGHT_PREFIX        = 4
	ImagemonkeyQueryLangLexerIMAGE_NUM_LABELS_PREFIX    = 5
	ImagemonkeyQueryLangLexerPERCENT                    = 6
	ImagemonkeyQueryLangLexerPIXEL                      = 7
	ImagemonkeyQueryLangLexerOPERATOR                   = 8
	ImagemonkeyQueryLangLexerASSIGNMENT                 = 9
	ImagemonkeyQueryLangLexerORDER_BY                   = 10
	ImagemonkeyQueryLangLexerORDER_BY_VALIDATION_DESC   = 11
	ImagemonkeyQueryLangLexerORDER_BY_VALIDATION_ASC    = 12
	ImagemonkeyQueryLangLexerORDER_BY_VALIDATION        = 13
	ImagemonkeyQueryLangLexerLABEL                      = 14
	ImagemonkeyQueryLangLexerUUID                       = 15
	ImagemonkeyQueryLangLexerVAL                        = 16
	ImagemonkeyQueryLangLexerAND                        = 17
	ImagemonkeyQueryLangLexerOR                         = 18
	ImagemonkeyQueryLangLexerNOT                        = 19
	ImagemonkeyQueryLangLexerLPAR                       = 20
	ImagemonkeyQueryLangLexerRPAR                       = 21
	ImagemonkeyQueryLangLexerSKIPPED_TOKENS             = 22
)
